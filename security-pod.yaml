apiVersion: v1
kind: Pod
metadata:
  name: security-pod
spec:
  containers:
    - name: container-1
      image: alpine:3.14
      command: ["/bin/sh", "-c", "echo 'Hello from container-1' > /shared-security/data/file1.txt"]
      volumeMounts:
        - name: shared-data
          mountPath: /shared-security/data
      resources:
        limits:
          cpu: "0.1"
          memory: "512Mi"
      ports:
        - containerPort: 8081
      stdin: true    # Enable stdin
      tty: true      # Allocate a pseudo-TTY
    - name: container-2
      image: alpine:3.14
      command: ["/bin/sh", "-c", "cat /shared-security/data/file1.txt"]
      volumeMounts:
        - name: shared-data
          mountPath: /shared-security/data
      resources:
        limits:
          cpu: "0.1"
          memory: "512Mi"
      ports:
        - containerPort: 8082
      stdin: true    # Enable stdin
      tty: true      # Allocate a pseudo-TTY
    - name: container-3
      image: alpine:3.14
      command: ["/bin/sh", "-c", "echo 'Hello from container-3' > /shared-security/data/file1.txt"]
      volumeMounts:
        - name: shared-data
          mountPath: /shared-security/data
      resources:
        limits:
          cpu: "0.1"
          memory: "512Mi"
      ports:
        - containerPort: 8083
      stdin: true    # Enable stdin
      tty: true      # Allocate a pseudo-TTY
    - name: container-4
      image: alpine:3.14
      command: ["/bin/sh", "-c", "cat /shared-security/data/file1.txt"]
      volumeMounts:
        - name: shared-data
          mountPath: /shared-security/data
      resources:
        limits:
          cpu: "0.1"
          memory: "512Mi"
      ports:
        - containerPort: 8084
      stdin: true    # Enable stdin
      tty: true      # Allocate a pseudo-TTY
    - name: container-5
      image: alpine:3.14
      command: ["/bin/sh", "-c", "echo 'Hello from container-5' > /shared-security/data/file1.txt"]
      volumeMounts:
        - name: shared-data
          mountPath: /shared-security/data
      resources:
        limits:
          cpu: "0.1"
          memory: "512Mi"
      ports:
        - containerPort: 8085
      stdin: true    # Enable stdin
      tty: true      # Allocate a pseudo-TTY
    - name: container-6
      image: alpine:3.14
      command: ["/bin/sh", "-c", "cat /shared-security/data/file1.txt"]
      volumeMounts:
        - name: shared-data
          mountPath: /shared-security/data
      resources:
        limits:
          cpu: "0.1"
          memory: "512Mi"
      ports:
        - containerPort: 8086
      stdin: true    # Enable stdin
      tty: true      # Allocate a pseudo-TTY
  volumes:
    - name: shared-data
      emptyDir: {}
